/*
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.20.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.asamoal.nifi.swagger.client.model.ComponentReferenceEntity;
import com.github.asamoal.nifi.swagger.client.model.PositionDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AccessPolicySummaryDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T17:38:07.775342+02:00[Europe/Berlin]")
public class AccessPolicySummaryDTO {
  @SerializedName("id")
  private String id = null;

  @SerializedName("versionedComponentId")
  private String versionedComponentId = null;

  @SerializedName("parentGroupId")
  private String parentGroupId = null;

  @SerializedName("position")
  private PositionDTO position = null;

  @SerializedName("resource")
  private String resource = null;

  /**
   * The action associated with this access policy.
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    READ("read"),
    WRITE("write");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ActionEnum fromValue(String input) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ActionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("action")
  private ActionEnum action = null;

  @SerializedName("componentReference")
  private ComponentReferenceEntity componentReference = null;

  @SerializedName("configurable")
  private Boolean configurable = null;

  public AccessPolicySummaryDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the component.
   * @return id
  **/
  @Schema(description = "The id of the component.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AccessPolicySummaryDTO versionedComponentId(String versionedComponentId) {
    this.versionedComponentId = versionedComponentId;
    return this;
  }

   /**
   * The ID of the corresponding component that is under version control
   * @return versionedComponentId
  **/
  @Schema(description = "The ID of the corresponding component that is under version control")
  public String getVersionedComponentId() {
    return versionedComponentId;
  }

  public void setVersionedComponentId(String versionedComponentId) {
    this.versionedComponentId = versionedComponentId;
  }

  public AccessPolicySummaryDTO parentGroupId(String parentGroupId) {
    this.parentGroupId = parentGroupId;
    return this;
  }

   /**
   * The id of parent process group of this component if applicable.
   * @return parentGroupId
  **/
  @Schema(description = "The id of parent process group of this component if applicable.")
  public String getParentGroupId() {
    return parentGroupId;
  }

  public void setParentGroupId(String parentGroupId) {
    this.parentGroupId = parentGroupId;
  }

  public AccessPolicySummaryDTO position(PositionDTO position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @Schema(description = "")
  public PositionDTO getPosition() {
    return position;
  }

  public void setPosition(PositionDTO position) {
    this.position = position;
  }

  public AccessPolicySummaryDTO resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * The resource for this access policy.
   * @return resource
  **/
  @Schema(description = "The resource for this access policy.")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public AccessPolicySummaryDTO action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * The action associated with this access policy.
   * @return action
  **/
  @Schema(description = "The action associated with this access policy.")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public AccessPolicySummaryDTO componentReference(ComponentReferenceEntity componentReference) {
    this.componentReference = componentReference;
    return this;
  }

   /**
   * Get componentReference
   * @return componentReference
  **/
  @Schema(description = "")
  public ComponentReferenceEntity getComponentReference() {
    return componentReference;
  }

  public void setComponentReference(ComponentReferenceEntity componentReference) {
    this.componentReference = componentReference;
  }

  public AccessPolicySummaryDTO configurable(Boolean configurable) {
    this.configurable = configurable;
    return this;
  }

   /**
   * Whether this policy is configurable.
   * @return configurable
  **/
  @Schema(description = "Whether this policy is configurable.")
  public Boolean isConfigurable() {
    return configurable;
  }

  public void setConfigurable(Boolean configurable) {
    this.configurable = configurable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessPolicySummaryDTO accessPolicySummaryDTO = (AccessPolicySummaryDTO) o;
    return Objects.equals(this.id, accessPolicySummaryDTO.id) &&
        Objects.equals(this.versionedComponentId, accessPolicySummaryDTO.versionedComponentId) &&
        Objects.equals(this.parentGroupId, accessPolicySummaryDTO.parentGroupId) &&
        Objects.equals(this.position, accessPolicySummaryDTO.position) &&
        Objects.equals(this.resource, accessPolicySummaryDTO.resource) &&
        Objects.equals(this.action, accessPolicySummaryDTO.action) &&
        Objects.equals(this.componentReference, accessPolicySummaryDTO.componentReference) &&
        Objects.equals(this.configurable, accessPolicySummaryDTO.configurable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, versionedComponentId, parentGroupId, position, resource, action, componentReference, configurable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessPolicySummaryDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    versionedComponentId: ").append(toIndentedString(versionedComponentId)).append("\n");
    sb.append("    parentGroupId: ").append(toIndentedString(parentGroupId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    componentReference: ").append(toIndentedString(componentReference)).append("\n");
    sb.append("    configurable: ").append(toIndentedString(configurable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
