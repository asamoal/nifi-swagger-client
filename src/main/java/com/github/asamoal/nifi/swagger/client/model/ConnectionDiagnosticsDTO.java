/*
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.20.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.asamoal.nifi.swagger.client.model.ConnectionDTO;
import com.github.asamoal.nifi.swagger.client.model.ConnectionDiagnosticsSnapshotDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ConnectionDiagnosticsDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T17:38:07.775342+02:00[Europe/Berlin]")
public class ConnectionDiagnosticsDTO {
  @SerializedName("connection")
  private ConnectionDTO connection = null;

  @SerializedName("aggregateSnapshot")
  private ConnectionDiagnosticsSnapshotDTO aggregateSnapshot = null;

  @SerializedName("nodeSnapshots")
  private List<ConnectionDiagnosticsSnapshotDTO> nodeSnapshots = null;

  public ConnectionDiagnosticsDTO connection(ConnectionDTO connection) {
    this.connection = connection;
    return this;
  }

   /**
   * Get connection
   * @return connection
  **/
  @Schema(description = "")
  public ConnectionDTO getConnection() {
    return connection;
  }

  public void setConnection(ConnectionDTO connection) {
    this.connection = connection;
  }

  public ConnectionDiagnosticsDTO aggregateSnapshot(ConnectionDiagnosticsSnapshotDTO aggregateSnapshot) {
    this.aggregateSnapshot = aggregateSnapshot;
    return this;
  }

   /**
   * Get aggregateSnapshot
   * @return aggregateSnapshot
  **/
  @Schema(description = "")
  public ConnectionDiagnosticsSnapshotDTO getAggregateSnapshot() {
    return aggregateSnapshot;
  }

  public void setAggregateSnapshot(ConnectionDiagnosticsSnapshotDTO aggregateSnapshot) {
    this.aggregateSnapshot = aggregateSnapshot;
  }

  public ConnectionDiagnosticsDTO nodeSnapshots(List<ConnectionDiagnosticsSnapshotDTO> nodeSnapshots) {
    this.nodeSnapshots = nodeSnapshots;
    return this;
  }

  public ConnectionDiagnosticsDTO addNodeSnapshotsItem(ConnectionDiagnosticsSnapshotDTO nodeSnapshotsItem) {
    if (this.nodeSnapshots == null) {
      this.nodeSnapshots = new ArrayList<ConnectionDiagnosticsSnapshotDTO>();
    }
    this.nodeSnapshots.add(nodeSnapshotsItem);
    return this;
  }

   /**
   * A list of values for each node in the cluster, if clustered.
   * @return nodeSnapshots
  **/
  @Schema(description = "A list of values for each node in the cluster, if clustered.")
  public List<ConnectionDiagnosticsSnapshotDTO> getNodeSnapshots() {
    return nodeSnapshots;
  }

  public void setNodeSnapshots(List<ConnectionDiagnosticsSnapshotDTO> nodeSnapshots) {
    this.nodeSnapshots = nodeSnapshots;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionDiagnosticsDTO connectionDiagnosticsDTO = (ConnectionDiagnosticsDTO) o;
    return Objects.equals(this.connection, connectionDiagnosticsDTO.connection) &&
        Objects.equals(this.aggregateSnapshot, connectionDiagnosticsDTO.aggregateSnapshot) &&
        Objects.equals(this.nodeSnapshots, connectionDiagnosticsDTO.nodeSnapshots);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connection, aggregateSnapshot, nodeSnapshots);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionDiagnosticsDTO {\n");
    
    sb.append("    connection: ").append(toIndentedString(connection)).append("\n");
    sb.append("    aggregateSnapshot: ").append(toIndentedString(aggregateSnapshot)).append("\n");
    sb.append("    nodeSnapshots: ").append(toIndentedString(nodeSnapshots)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
