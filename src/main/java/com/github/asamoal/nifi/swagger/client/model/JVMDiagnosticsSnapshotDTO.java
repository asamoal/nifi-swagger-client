/*
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.20.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.asamoal.nifi.swagger.client.model.JVMControllerDiagnosticsSnapshotDTO;
import com.github.asamoal.nifi.swagger.client.model.JVMFlowDiagnosticsSnapshotDTO;
import com.github.asamoal.nifi.swagger.client.model.JVMSystemDiagnosticsSnapshotDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * JVMDiagnosticsSnapshotDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T17:38:07.775342+02:00[Europe/Berlin]")
public class JVMDiagnosticsSnapshotDTO {
  @SerializedName("systemDiagnosticsDto")
  private JVMSystemDiagnosticsSnapshotDTO systemDiagnosticsDto = null;

  @SerializedName("flowDiagnosticsDto")
  private JVMFlowDiagnosticsSnapshotDTO flowDiagnosticsDto = null;

  @SerializedName("controllerDiagnostics")
  private JVMControllerDiagnosticsSnapshotDTO controllerDiagnostics = null;

  public JVMDiagnosticsSnapshotDTO systemDiagnosticsDto(JVMSystemDiagnosticsSnapshotDTO systemDiagnosticsDto) {
    this.systemDiagnosticsDto = systemDiagnosticsDto;
    return this;
  }

   /**
   * Get systemDiagnosticsDto
   * @return systemDiagnosticsDto
  **/
  @Schema(description = "")
  public JVMSystemDiagnosticsSnapshotDTO getSystemDiagnosticsDto() {
    return systemDiagnosticsDto;
  }

  public void setSystemDiagnosticsDto(JVMSystemDiagnosticsSnapshotDTO systemDiagnosticsDto) {
    this.systemDiagnosticsDto = systemDiagnosticsDto;
  }

  public JVMDiagnosticsSnapshotDTO flowDiagnosticsDto(JVMFlowDiagnosticsSnapshotDTO flowDiagnosticsDto) {
    this.flowDiagnosticsDto = flowDiagnosticsDto;
    return this;
  }

   /**
   * Get flowDiagnosticsDto
   * @return flowDiagnosticsDto
  **/
  @Schema(description = "")
  public JVMFlowDiagnosticsSnapshotDTO getFlowDiagnosticsDto() {
    return flowDiagnosticsDto;
  }

  public void setFlowDiagnosticsDto(JVMFlowDiagnosticsSnapshotDTO flowDiagnosticsDto) {
    this.flowDiagnosticsDto = flowDiagnosticsDto;
  }

  public JVMDiagnosticsSnapshotDTO controllerDiagnostics(JVMControllerDiagnosticsSnapshotDTO controllerDiagnostics) {
    this.controllerDiagnostics = controllerDiagnostics;
    return this;
  }

   /**
   * Get controllerDiagnostics
   * @return controllerDiagnostics
  **/
  @Schema(description = "")
  public JVMControllerDiagnosticsSnapshotDTO getControllerDiagnostics() {
    return controllerDiagnostics;
  }

  public void setControllerDiagnostics(JVMControllerDiagnosticsSnapshotDTO controllerDiagnostics) {
    this.controllerDiagnostics = controllerDiagnostics;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JVMDiagnosticsSnapshotDTO jvMDiagnosticsSnapshotDTO = (JVMDiagnosticsSnapshotDTO) o;
    return Objects.equals(this.systemDiagnosticsDto, jvMDiagnosticsSnapshotDTO.systemDiagnosticsDto) &&
        Objects.equals(this.flowDiagnosticsDto, jvMDiagnosticsSnapshotDTO.flowDiagnosticsDto) &&
        Objects.equals(this.controllerDiagnostics, jvMDiagnosticsSnapshotDTO.controllerDiagnostics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(systemDiagnosticsDto, flowDiagnosticsDto, controllerDiagnostics);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JVMDiagnosticsSnapshotDTO {\n");
    
    sb.append("    systemDiagnosticsDto: ").append(toIndentedString(systemDiagnosticsDto)).append("\n");
    sb.append("    flowDiagnosticsDto: ").append(toIndentedString(flowDiagnosticsDto)).append("\n");
    sb.append("    controllerDiagnostics: ").append(toIndentedString(controllerDiagnostics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
