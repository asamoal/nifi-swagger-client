/*
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.20.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.asamoal.nifi.swagger.client.model.ParameterContextReferenceEntity;
import com.github.asamoal.nifi.swagger.client.model.ParameterEntity;
import com.github.asamoal.nifi.swagger.client.model.ParameterProviderConfigurationEntity;
import com.github.asamoal.nifi.swagger.client.model.ProcessGroupEntity;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ParameterContextDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T17:38:07.775342+02:00[Europe/Berlin]")
public class ParameterContextDTO {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("parameters")
  private List<ParameterEntity> parameters = null;

  @SerializedName("boundProcessGroups")
  private List<ProcessGroupEntity> boundProcessGroups = null;

  @SerializedName("inheritedParameterContexts")
  private List<ParameterContextReferenceEntity> inheritedParameterContexts = null;

  @SerializedName("parameterProviderConfiguration")
  private ParameterProviderConfigurationEntity parameterProviderConfiguration = null;

  @SerializedName("id")
  private String id = null;

  public ParameterContextDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The Name of the Parameter Context.
   * @return name
  **/
  @Schema(description = "The Name of the Parameter Context.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ParameterContextDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The Description of the Parameter Context.
   * @return description
  **/
  @Schema(description = "The Description of the Parameter Context.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ParameterContextDTO parameters(List<ParameterEntity> parameters) {
    this.parameters = parameters;
    return this;
  }

  public ParameterContextDTO addParametersItem(ParameterEntity parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<ParameterEntity>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * The Parameters for the Parameter Context
   * @return parameters
  **/
  @Schema(description = "The Parameters for the Parameter Context")
  public List<ParameterEntity> getParameters() {
    return parameters;
  }

  public void setParameters(List<ParameterEntity> parameters) {
    this.parameters = parameters;
  }

  public ParameterContextDTO boundProcessGroups(List<ProcessGroupEntity> boundProcessGroups) {
    this.boundProcessGroups = boundProcessGroups;
    return this;
  }

  public ParameterContextDTO addBoundProcessGroupsItem(ProcessGroupEntity boundProcessGroupsItem) {
    if (this.boundProcessGroups == null) {
      this.boundProcessGroups = new ArrayList<ProcessGroupEntity>();
    }
    this.boundProcessGroups.add(boundProcessGroupsItem);
    return this;
  }

   /**
   * The Process Groups that are bound to this Parameter Context
   * @return boundProcessGroups
  **/
  @Schema(description = "The Process Groups that are bound to this Parameter Context")
  public List<ProcessGroupEntity> getBoundProcessGroups() {
    return boundProcessGroups;
  }

  public void setBoundProcessGroups(List<ProcessGroupEntity> boundProcessGroups) {
    this.boundProcessGroups = boundProcessGroups;
  }

  public ParameterContextDTO inheritedParameterContexts(List<ParameterContextReferenceEntity> inheritedParameterContexts) {
    this.inheritedParameterContexts = inheritedParameterContexts;
    return this;
  }

  public ParameterContextDTO addInheritedParameterContextsItem(ParameterContextReferenceEntity inheritedParameterContextsItem) {
    if (this.inheritedParameterContexts == null) {
      this.inheritedParameterContexts = new ArrayList<ParameterContextReferenceEntity>();
    }
    this.inheritedParameterContexts.add(inheritedParameterContextsItem);
    return this;
  }

   /**
   * A list of references of Parameter Contexts from which this one inherits parameters
   * @return inheritedParameterContexts
  **/
  @Schema(description = "A list of references of Parameter Contexts from which this one inherits parameters")
  public List<ParameterContextReferenceEntity> getInheritedParameterContexts() {
    return inheritedParameterContexts;
  }

  public void setInheritedParameterContexts(List<ParameterContextReferenceEntity> inheritedParameterContexts) {
    this.inheritedParameterContexts = inheritedParameterContexts;
  }

  public ParameterContextDTO parameterProviderConfiguration(ParameterProviderConfigurationEntity parameterProviderConfiguration) {
    this.parameterProviderConfiguration = parameterProviderConfiguration;
    return this;
  }

   /**
   * Get parameterProviderConfiguration
   * @return parameterProviderConfiguration
  **/
  @Schema(description = "")
  public ParameterProviderConfigurationEntity getParameterProviderConfiguration() {
    return parameterProviderConfiguration;
  }

  public void setParameterProviderConfiguration(ParameterProviderConfigurationEntity parameterProviderConfiguration) {
    this.parameterProviderConfiguration = parameterProviderConfiguration;
  }

  public ParameterContextDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID the Parameter Context.
   * @return id
  **/
  @Schema(description = "The ID the Parameter Context.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterContextDTO parameterContextDTO = (ParameterContextDTO) o;
    return Objects.equals(this.name, parameterContextDTO.name) &&
        Objects.equals(this.description, parameterContextDTO.description) &&
        Objects.equals(this.parameters, parameterContextDTO.parameters) &&
        Objects.equals(this.boundProcessGroups, parameterContextDTO.boundProcessGroups) &&
        Objects.equals(this.inheritedParameterContexts, parameterContextDTO.inheritedParameterContexts) &&
        Objects.equals(this.parameterProviderConfiguration, parameterContextDTO.parameterProviderConfiguration) &&
        Objects.equals(this.id, parameterContextDTO.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, parameters, boundProcessGroups, inheritedParameterContexts, parameterProviderConfiguration, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterContextDTO {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    boundProcessGroups: ").append(toIndentedString(boundProcessGroups)).append("\n");
    sb.append("    inheritedParameterContexts: ").append(toIndentedString(inheritedParameterContexts)).append("\n");
    sb.append("    parameterProviderConfiguration: ").append(toIndentedString(parameterProviderConfiguration)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
